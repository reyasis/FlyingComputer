class Event {
    + uint64_t getEventId()
    + void *getEventData()
}

Interface IState {
    + void onEnter()
    + void onExit()
    + void onEvent(Event& event)
}

Interface IFiniteStateMachine {
    + void changeState(IState& target)
}

Class ThrottleFsm {
    + void changeState(IState& target)
    + void triggerEvent(Event& event)
    - IState *currentState
    - tuple<ManualThrottleState, AutoThrottleState, TogaThrottleState, TogaLkThrottleState, IdleThrottleState> throttleStates;
}

class ManualThrottleState {
    - void dispatchEvent(uint64_t eventId)
    + void onEnter()
    + void onExit()
    + void onEvent(Event& event)
}

class AutoThrottleState {
    - void dispatchEvent(uint64_t eventId)
    + void onEnter()
    + void onExit()
    + void onEvent(Event& event)
}

class TogaThrottleState {
    - void dispatchEvent(uint64_t eventId)
    + void onEnter()
    + void onExit()
    + void onEvent(Event& event)
}

class TogaLkThrottleState {
    - void dispatchEvent(uint64_t eventId)
    + void onEnter()
    + void onExit()
    + void onEvent(Event& event)
}

class IdleThrottleState {
    - void dispatchEvent(uint64_t eventId)
    + void onEnter()
    + void onExit()
    + void onEvent(Event& event)
}

class SpeedChangeEventData {
    + double speed
}

class LeverChangeEventData {
    + double lever
}

class AutothrottleChangeEventData {
    + bool status
}

class PitchPowerManager {
    + void start()
    + void stop()
    - onLeverUpdate
    - onSpeedUpdate
    - onAutoPilotUpdate
}

ManualThrottleState --|> IState
AutoThrottleState --|> IState
TogaThrottleState --|> IState
TogaLkThrottleState --|> IState
IdleThrottleState --|> IState
ThrottleFsm --|> IFiniteStateMachine

ThrottleFsm *-- ManualThrottleState
ThrottleFsm *-- AutoThrottleState
ThrottleFsm *-- TogaThrottleState
ThrottleFsm *-- TogaLkThrottleState
ThrottleFsm *-- IdleThrottleState

Event o-- SpeedChangeEventData
Event o-- LeverChangeEventData
Event o-- AutothrottleChangeEventData

PitchPowerManager ..> Event : uses

PitchPowerManager *-- ThrottleFsm
PitchPowerManager *-- PitchPowerContext
ThrottleFsm ..> PitchPowerContext : uses